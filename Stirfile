@toplevel
@strict

@fileinclude @ignore "opts.smk"

# You can modify these for compilation
$CC ?= "cc"
$CFLAGS ?= ["-g", "-O2", "-Wall", "-Wextra", "-Wsign-conversion", "-Wno-missing-field-initializers", "-Wno-unused-parameter", "-Wshadow", "-Wstrict-prototypes", "-Wmissing-prototypes", "-Wpointer-arith", "-Werror", "-std=gnu11", "-fPIC"]
$WITH_NETMAP ?= @false
$NETMAP_INCDIR ?= ""
$WITH_ODP ?= @false
$ODP_DIR ?= "/usr/local"
$WITH_DPDK ?= @false
$WITH_LUA ?= @false
$DPDK_INCDIR ?= ""
$DPDK_LIBDIR ?= ""
$LIBS_ODPDEP ?= ["/usr/lib/x86_64-linux-gnu/libssl.a", "/usr/lib/x86_64-linux-gnu/libcrypto.a"]
$LDFLAGS ?= []

# You can modify these during development
$MODS = ["sackhash", "synproxy", "threetuple"]

# You probably don't want to modify anything below this line

@function $LIST_TO_DICTS_SIMPLE($list, $param)
  @locvar $i=0
  @locvar $dicts=[]
  @for($i=0,$i<$list[],$i=$i+1)
    @append($dicts, {$param: $list[$i]})
  @endfor
  @return $dicts
@endfunction

@function $MODULE($lib, $src_lib, $src_prog, $libs, $unitdeps, $unitcmds)
  @locvar $src = [@$src_lib, @$src_prog]
  @locvar $obj_lib = @sufsuball($src_lib, ".c", ".o")
  @locvar $obj_prog = @sufsuball($src_prog, ".c", ".o")
  @locvar $obj = @sufsuball($src, ".c", ".o")
  @locvar $dep = @sufsuball($src, ".c", ".d")
  @locvar $prog = @sufsuball($src_prog, ".c", "")
  @locvar $alldeps = [@$prog, $lib]
  @locvar $i = 0
  @addrule({"tgts": [{"name": "all"}], "attrs": {"phony": @true}, \
            "deps": @L$LIST_TO_DICTS_SIMPLE($alldeps, "name")})
  @addrule({"tgts": [{"name": "unit"}], "attrs": {"phony": @true}, \
            "deps": @L$LIST_TO_DICTS_SIMPLE($unitdeps, "name"), \
            "shells": [{"embed": @true, "cmds": $unitcmds}]})
  @for($i=0,$i<$obj[],$i=$i+1)
    @addrule({"tgts": [{"name": $obj[$i]}], \
              "deps": [{"name": $src[$i]}, {"name": $dep[$i]}], \
              "shells": [{"cmd": [ \
                          @D$(CC), @@D$(CFLAGS), "-c", "-o", $obj[$i], \
                          $src[$i]]}]})
    @addrule({"tgts": [{"name": $dep[$i]}], \
              "deps": [{"name": $src[$i]}], \
              "shells": [{"cmd": [ \
                          @D$(CC), @@D$(CFLAGS), "-M", "-o", $dep[$i], \
                          $src[$i]]}]})
  @endfor
  @for($i=0,$i<$prog[],$i=$i+1)
    @addrule({"tgts": [{"name": $prog[$i]}], \
              "deps": [{"name": $obj_prog[$i]}, \
                       {"name": $lib}, \
                       @@L$LIST_TO_DICTS_SIMPLE($libs, "name")], \
              "shells": [{"cmd": [ \
                          @D$(CC), @@D$(CFLAGS), "-o", $prog[$i], \
                          $obj_prog[$i], $lib, @$libs, @@D$(LDFLAGS), \
                          "-lpthread", "-ldl"]}]})
  @endfor
  @addrule({"tgts": [{"name": $lib}], \
            "deps": @L$LIST_TO_DICTS_SIMPLE($obj_lib, "name"), \
            "shells": [{"embed": @true, "cmds": [ \
                        ["rm", "-f", $lib], \
                        ["ar", "rvs", $lib, @$obj_lib]]}]})
@endfunction

$MODS_ALL = @sufsuball($MODS, "", "/all")
$MODS_UNIT = @sufsuball($MODS, "", "/unit")

@phonyrule: 'all': $MODS_ALL 'pptk/all'

@phonyrule: 'unit': $MODS_UNIT 'pptk/unit'

@beginholeyscope
  $CC = @LP$CC
  $CFLAGS = @LP$CFLAGS
  $WITH_NETMAP = @LP$WITH_NETMAP
  $NETMAP_INCDIR = @LP$NETMAP_INCDIR
  $WITH_ODP = @LP$WITH_ODP
  $ODP_DIR = @LP$ODP_DIR
  $WITH_DPDK = @LP$WITH_DPDK
  $WITH_LUA = @LP$WITH_LUA
  $DPDK_INCDIR = @LP$DPDK_INCDIR
  $DPDK_LIBDIR = @LP$DPDK_LIBDIR
  $LIBS_ODPDEP = @LP$LIBS_ODPDEP
  $LDFLAGS = @LP$LDFLAGS
  @projdirinclude "pptk"
@endscope

@dirinclude $MODS
